<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Support\Facades\File;
use Intervention\Image\Laravel\Facades\Image;

class TourImage extends Model
{
    use HasFactory;

    protected $fillable = [
        'image',
        'cover',
        'tour_id'
    ];

    /**
     * @return BelongsTo
     */
    public function tour(): BelongsTo
    {
        return $this->belongsTo(Tour::class, 'tour_id');
    }

    public function getThumbnailAttribute(): ?string
    {
        if(!empty($this->attributes['image'])){
            $name = basename($this->attributes['image']);
            return '/tours/images/thumbs/'.$name;
        }

        return null;
    }

    protected static function boot(): void
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($model) {

            $image = 'uploads/'.$model->image;
            $imageName = basename($image);
            $thumbPath = public_path('uploads/tours/images/thumbs/' . $imageName);

            if(!File::exists($thumbPath)){
                Image::read($image)->cover(1000, 666)->toJpeg()->save($thumbPath);
            }

        });

        static::updated(function ($model) {

            $image = 'uploads/'.$model->image;
            $imageName = basename($image);
            $thumbPath = public_path('uploads/tours/images/thumbs/' . $imageName);

            if(!File::exists($thumbPath)) {
                Image::read($image)->cover(1000, 666)->toJpeg()->save($thumbPath);
            }
        });
    }

}
